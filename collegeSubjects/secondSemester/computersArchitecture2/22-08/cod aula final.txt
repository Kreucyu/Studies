/* Main.c file generated by New Project wizard
 *
 * Created:   qui ago 8 2024
 * Processor: 8086
 * Compiler:  Digital Mars C
 *
 * Before starting simulation set Internal Memory Size 
 * in the 8086 model properties to 0x10000
 */

#define IO0 0x0000
#define IO1 0x0200
#define IO2 0x0400
#define IO3 0x0600
#define IO4 0x0800
#define IO5 0x0A00
#define IO6 0x0C00
#define IO7 0x0E00
#define IO8 0x1000
#define IO9 0x1200
#define IO10 0x1400
#define IO11 0x1600
#define IO12 0x1800
#define IO13 0x1a00
#define IO14 0x1c00
#define IO15 0x1e00

unsigned char HORA;
unsigned char MINUTO;


void Esperar_288_ms(void)
{
	asm 
	{
		mov cx, 54612 
decrementa:
		dec cx
		cmp cx, 0
		jne decrementa
	}
}

//esta rotina levar√° aproximadamente 288mS para executar
void Esperar_1_Segundo(void)
{
	asm 
	{
		call Esperar_288_ms
		call Esperar_288_ms
		call Esperar_288_ms
		call Esperar_288_ms
	}
}

void Inicializa_Relogio(void)
{
	asm {
			mov HORA, 0
			mov MINUTO, 0
		}
}

void Atualiza_Relogio(void)
{
	asm {
			inc MINUTO
			cmp MINUTO, 60
			je  ZERA_MINUTO
			jmp SAI_Atualiza_Relogio
ZERA_MINUTO:
			mov MINUTO,0
			inc HORA
			cmp HORA,24
			je  ZERA_HORA
			jmp SAI_Atualiza_Relogio
ZERA_HORA:
			mov HORA,0
			jmp SAI_Atualiza_Relogio
SAI_Atualiza_Relogio:
		}
}

void Mostra_Relogio(void)
{
	asm {
			//HORA de 8 bits
			//AX de bits 16 bits
			mov al, HORA
			mov ah, 0 //pode ter sujeira
			//ax = 00000000000010001
			mov bl, 10
			div bl
			//al = quociente ah = resto			
            //al = 1 ah = 7
			mov dx, IO2  
			out dx, al 
			mov al, ah
			mov dx, IO3   
			out dx, al		
			mov al, MINUTO
			mov ah, 0
			mov bl, 10
			div bl
			//al = quociente ah = resto
            //al = 2 e ah = 3
			mov dx, IO4
			out dx, al // 2			
			mov dx, IO5
			mov al, ah
			out dx, al // 3
		}
}

void main(void)
 {
  
  Inicializa_Relogio();
 
  while(1)
  {
   asm {
		call Atualiza_Relogio
		call Mostra_Relogio
		call Esperar_1_Segundo
	}
  }
 }